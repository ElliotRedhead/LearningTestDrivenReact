{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/elliot/programming/test-driven-react/simple-app/src/contexts/ContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TestContext from \"./TestContext\";\nimport PropTypes from \"prop-types\";\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [contextValue, setContextValue] = useState(\"Hello there\");\n  const context = {\n    setContextValue,\n    contextValue\n  };\n  return /*#__PURE__*/_jsxDEV(TestContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContextProvider, \"h5UsmiRrm66tfZBIVtNdvlz6Rg0=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nContextProvider.propTypes = {\n  children: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/elliot/programming/test-driven-react/simple-app/src/contexts/ContextProvider.jsx"],"names":["React","useState","TestContext","PropTypes","ContextProvider","children","contextValue","setContextValue","context","propTypes","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,aAAD,CAAhD;AAEA,QAAMO,OAAO,GAAG;AACfD,IAAAA,eADe;AAEfD,IAAAA;AAFe,GAAhB;AAKA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGE,OAA9B;AAAA,cACEH;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAbD;;GAAMD,e;;KAAAA,e;AAcN,eAAeA,eAAf;AAEAA,eAAe,CAACK,SAAhB,GAA4B;AAC3BJ,EAAAA,QAAQ,EAAEF,SAAS,CAACO;AADO,CAA5B","sourcesContent":["import React, { useState } from \"react\";\nimport TestContext from \"./TestContext\";\nimport PropTypes from \"prop-types\";\n\nconst ContextProvider = ({ children }) => {\n\tconst [contextValue, setContextValue] = useState(\"Hello there\");\n\t\n\tconst context = {\n\t\tsetContextValue,\n\t\tcontextValue,\n\t};\n\n\treturn (\n\t\t<TestContext.Provider value={ context }> \n\t\t\t{children}\n\t\t</TestContext.Provider>\n\t);\n};\nexport default ContextProvider;\n\nContextProvider.propTypes = {\n\tchildren: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}